sonar.projectKey=philips-software_amp-cucumber-cpp-runner
sonar.organization=philips-software

sonar.projectName=amp-cucumber-cpp-runner

# x-release-please-start-version
sonar.projectVersion=0.0.0
# x-release-please-end

sonar.links.homepage=https://github.com/philips-software/amp-cucumber-cpp-runner
sonar.links.ci=https://github.com/philips-software/amp-cucumber-cpp-runner/actions
sonar.links.issue=https://github.com/philips-software/amp-cucumber-cpp-runner/issues
sonar.links.scm=https://github.com/philips-software/amp-cucumber-cpp-runner.git

sonar.c.file.suffixes=.c,.h
sonar.cpp.file.suffixes=.cc,.cpp,.cxx,.c++,.hh,.hpp,.hxx,.h++,.ipp

sonar.sources=.
sonar.exclusions=**/cucumber-cpp-example/**/*

# sonar.tests=.
# sonar.test.inclusions=**/test/*,**/test_doubles/*,**/test_helper/*

sonar.cfamily.compile-commands=compile_commands.json
sonar.cfamily.threads=2

# sonar.testExecutionReportPaths=execution.xml
# sonar.coverageReportPaths=coverage.xml
# sonar.coverage.exclusions=**/ignorethis/**/*
sonar.cpd.exclusions=${env.SONAR_DUPLICATION_EXCLUSIONS}

# Project specific ignored rules
# NOTE: Please update scan details in SCA document
#       when making updates here!
sonar.issue.ignore.multicriteria=e1

# The "Rule-of-Zero" should be followed [cpp:S4963]
#
# S4963 enforces absolutely, always the rule of zero.
# Rule of zero on certain occasions, i.e. classes that needs to do resource management,
# should be relaxed and rule of five should be followed.
# S3624 does exactly this: When the "Rule-of-Zero" is not applicable, the "Rule-of-Five" should be followed
# See https://community.sonarsource.com/t/how-to-fix-a-the-rule-of-zero-should-be-followed/20656/6
sonar.issue.ignore.multicriteria.e1.ruleKey=cpp:S4963
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.?pp
